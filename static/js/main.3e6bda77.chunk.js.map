{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Props","react_default","a","createElement","className","concat","mode","href","Title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","class","onClick","toggleMode","role","for","TextForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","title","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3e6bda77.chunk.js","sourcesContent":["import React from 'react'\r\n//import {Link} from \"react-router-dom\"\r\nexport default function Navbar(Props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${Props.mode} bg-${Props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{Props.Title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\"> \r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n        </li> */}\r\n        {/* <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/\">About</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div class={`form-check form-switch text-${Props.mode==='light'?'dark':'light'}`}>\r\n        <input class=\"form-check-input\" onClick = {Props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=> {\r\n    console.log(\"Upparcase is clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"ho gaye bhosdk bade axar\" , \"success\")\r\n\r\n  }\r\n  const handleOnChange = (event)=> {\r\n    console.log(\"on change\");\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleloClick = ()=> {\r\n    let newText = text.toLowerCase();\r\n    setText(newText); \r\n    props.showAlert(\"ho gaye bhosdk chote axar\" , \"success\")\r\n  }\r\nconst [text, setText] = useState('');\r\n//setText(\"New text\");\r\nreturn (\r\n<>\r\n<div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n<h1>{props.heading} </h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text}  onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#424d5edb':'white' , color: props.mode==='dark'?'white':'dark'}}  id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}> Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-3\" onClick={handleloClick}> Convert to Lowercase</button>\r\n\r\n</div>\r\n<div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n  <h1>Your Text Summary</h1>\r\n  <p>{text.split(\" \").length} words {text.length} Characters</p>\r\n  <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n  <h2>Preview</h2>\r\n  <p>{text.length>0?text:\"Enter Something to preview it\"}</p>\r\n</div>\r\n</>\r\n)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    // const capitalize = (word)=>\r\n    // {\r\n    //   const lower = word.toLowerCase();\r\n    //   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    // }\r\n  return (\r\n   props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>   \r\n  )\r\n}\r\n","import './App.css';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  const [alert , setAlert] = useState('null');\n\n  const showAlert= (message , type)=> {\n    setAlert({\n      msg : message ,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = ()=> {\n      if(mode==='light') {\n        setMode('dark');\n        document.body.style.backgroundColor='#424d6edb';\n        showAlert(\"Dark mode has been Enabled\" , \"success\")\n      }\n      else {\n        setMode('light');\n        document.body.style.backgroundColor='White';\n        showAlert(\"Light mode has been Enabled\" , \"success\")\n      }\n  }\n  return (\n   <>\n   {/* <Router> */}\n   <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   <div className=\"container my-3\">\n            <TextForm heading=\"Enter the Text to Analyze\"  showAlert={showAlert} mode={mode} />\n            {/* <Routes>\n          <Route exact path='/about' element={<About/>} />\n          <Route exact path='/' element={<TextForm showAlert = {showAlert} heading = \"Enter the text to analyze\" mode = {mode}/>} />\n </Routes> */}\n    </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>   \n  <App />   \n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}